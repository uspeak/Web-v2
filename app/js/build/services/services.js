// Generated by CoffeeScript 1.3.3
(function() {

  define(["Console", "Underscore", "build/services/DiagnosticWordsService", "build/services/UserService", "build/services/GameWordsService", "build/services/GamesService", "build/services/GamesPlayed"], function(Console, _, dws, us, gws, gs, gp) {
    "use strict";
    Console.group("Entering Service module.");
    Console.info("DiagnosticWordsService", dws);
    Console.groupEnd();
    return function() {
      Console.debug("Custom services initialized.");
      return angular.module("uspeak.diagnostic.resources", ["ngResource"]).factory("DiagnosticWordsService", dws).factory("GameWordsService", gws).factory("UserService", us).factory("GamesService", gs).factory("GamesPlayed", gp).factory("user", function(UserService) {
        var user;
        user = new UserService();
        if (DEBUG) {
          user.setToken("testtoken");
        }
        return user;
      }).factory("games", function() {
        return new ((function() {

          function _Class() {}

          _Class.prototype.data = [
            {
              id: 1,
              type: "flipcards",
              variations: [1, 2, 21, 22]
            }, {
              id: 2,
              type: "fatfingers",
              variations: [1, 2, 7, 21, 22]
            }, {
              id: 3,
              type: "whichone",
              variations: [1, 2, 7, 21, 22]
            }, {
              id: 4,
              type: "yayornay",
              variations: [12, 13, 14, 15, 16, 17, 18, 28, 29, 30, 31]
            }, {
              id: 5,
              type: "braintickle",
              variations: [3, 12, 13, 14, 15, 16, 17, 18, 23, 25]
            }, {
              id: 6,
              type: "association",
              variations: [1, 2, 7, 9, 10]
            }
          ];

          _Class.prototype.get = function(key, value) {
            return _.find(this.data, function(obj) {
              return obj[key] === value;
            }) || {};
          };

          _Class.prototype.id = function(value) {
            return this.get("id", value);
          };

          _Class.prototype.type = function(value) {
            return this.get("type", value);
          };

          return _Class;

        })())();
      });
    };
  });

}).call(this);
