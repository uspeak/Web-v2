// Generated by CoffeeScript 1.3.3
(function() {

  define(["Console", "jQuery"], function(Console, $) {
    "use strict";
    Console.group("Entering popups directive module.");
    Console.groupEnd();
    return function() {
      return {
        restrict: "E",
        transclude: true,
        scope: true,
        template: "<div class=\"popups\" ng-class=\"{active:active}\" ng-transclude></div>",
        replace: true,
        controller: function($scope, $element) {
          var hidePopup, opened_popups, popups;
          popups = {};
          opened_popups = [];
          $scope.$root.showPopup = function(name) {
            var el;
            opened_popups.push(name);
            $scope.active = true;
            popups[name].scope.active = true;
            el = $(popups[name].element);
            el.show();
            if ($scope.$root.effects) {
              return el.keyframe("flipInPopup", 600);
            }
          };
          hidePopup = function() {
            var el, f, last;
            Console.info("Hided Popup", opened_popups);
            if (!opened_popups.length) {
              $scope.active = false;
              $scope.$apply();
              return;
            }
            last = opened_popups.pop();
            el = $(popups[last].element);
            f = function() {
              el.hide();
              return hidePopup();
            };
            if ($scope.$root.effects) {
              return el.keyframe("flipOutPopup", 600, f);
            } else {
              return f();
            }
          };
          $scope.$root.hidePopup = function() {
            return hidePopup();
          };
          return this.addPopup = function(scope, element, attrs) {
            var controller, name;
            name = attrs.popupId;
            controller = element.controller();
            Console.info("Registered popup " + name, scope, attrs, element, controller);
            return popups[name] = {
              scope: scope,
              controller: controller,
              element: element,
              attrs: attrs
            };
          };
        }
      };
    };
  });

}).call(this);
