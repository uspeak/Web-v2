// Generated by CoffeeScript 1.3.3
(function() {

  define(["Console", "Underscore", "jQuery"], function(Console, _, $) {
    "use strict";
    Console.group("Entering games directive module.");
    Console.groupEnd();
    return function() {
      return {
        restrict: "E",
        transclude: true,
        scope: true,
        template: "<div class=\"games\" ng-transclude></div>",
        replace: true,
        controller: function($scope, $element, games, GameWordsService, ChallengeWordsService) {
          var $game, game_active, play, unplay;
          game_active = void 0;
          $game = $("#game");
          play = function(gameData, onFinish, diagnostic) {
            var game, gameId;
            if (_.isArray(gameData)) {
              gameData = gameData[0];
            }
            gameId = gameData.gid;
            game = games.id(gameId);
            $scope.$parent.gamePaused = false;
            $scope.$root.hideScreen(function() {
              $game.addClass("play");
              game_active = game;
              return game.play(gameData, onFinish, diagnostic);
            });
            return game;
          };
          unplay = function() {
            $game.removeClass("play");
            game_active.unplay();
            return game_active = undefined;
          };
          $scope.$parent.togglePlay = function() {
            if (game_active.scope.active) {
              return game_active.pause();
            } else {
              return game_active.resume();
            }
          };
          $scope.$root.exitGame = function() {
            if (!game_active) {
              return;
            }
            Console.info("Exiting game");
            if (game_active.diagnostic) {
              $scope.goScreen("diagnostic-games-intro");
            } else {
              $scope.goScreen("user-games");
            }
            return unplay();
          };
          $scope.$parent.playDiagnosticGame = function(gameData) {
            var game;
            return game = play(gameData, function() {
              Console.info("Finished game");
              $scope.diagnostic.gameIndex += 1;
              $scope.goScreen(($scope.diagnostic.finished() ? "diagnostic-register" : "diagnostic-games-intro"));
              return unplay();
            }, true);
          };
          $scope.$parent.playGame = function(gameId) {
            var gameInfo, onFinish;
            $game.addClass("loading");
            gameInfo = games.id(gameId);
            Console.info("Loading game", gameInfo);
            onFinish = function(data) {
              var game;
              $game.removeClass("loading");
              Console.info("Game loaded", data);
              return game = play(data, function() {
                var popup;
                Console.info("Finished game");
                popup = $scope.showPopup('postgame');
                return popup.scope.$parent.game = game_active;
              });
            };
            if (gameId !== 8) {
              return GameWordsService.get({
                lang_dir: LANG_DIR,
                game: gameInfo.id
              }, onFinish);
            } else {
              return ChallengeWordsService.get({
                lang_dir: LANG_DIR
              }, onFinish);
            }
          };
          $scope.$parent.gameDescription = function(gameId) {
            if (gameId) {
              return games.id(gameId).description;
            }
          };
          $scope.$parent.gameController = function(gameId) {
            if (gameId) {
              return games.id(gameId).controller;
            }
          };
          return this.addGame = function(scope, element, attrs) {
            var controller;
            controller = element.controller();
            return games.register(controller, attrs);
          };
        }
      };
    };
  });

}).call(this);
